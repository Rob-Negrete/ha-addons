version: "3.8"

services:
  test-qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6334:6333"
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__LOG_LEVEL=WARN
    tmpfs:
      - /qdrant/storage
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      # Mount source code for development
      - ./tests:/app/tests
      - ./scripts:/app/scripts
      - ./run_tests.py:/app/run_tests.py
      - ./pytest*.ini:/app/
    environment:
      - PYTHONPATH=/app
    command: python run_tests.py all

  # Quick unit tests (no ML dependencies)
  unit-tests:
    image: python:3.10-slim
    volumes:
      - ./tests:/app/tests
      - ./run_tests.py:/app/run_tests.py
      - ./pytest-unit.ini:/app/pytest-unit.ini
    working_dir: /app
    command: >
      sh -c "
        pip install --no-cache-dir pytest flask pillow numpy &&
        python run_tests.py unit
      "

  # Integration tests (full ML stack)
  integration-tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      - ./tests:/app/tests
      - ./scripts:/app/scripts
      - ./run_tests.py:/app/run_tests.py
      - ./pytest-integration.ini:/app/pytest-integration.ini
    environment:
      - PYTHONPATH=/app
      # Optimize memory usage
      - OMP_NUM_THREADS=2
      - MKL_NUM_THREADS=2
      - NUMEXPR_MAX_THREADS=2
      # Qdrant configuration for testing
      - FACE_REKON_USE_EMBEDDED_QDRANT=true # Use embedded Qdrant for integration tests
      - QDRANT_PATH=/tmp/test_qdrant
      - FACE_REKON_BASE_PATH=/tmp/test_faces
      - FACE_REKON_UNKNOWN_PATH=/tmp/test_unknowns
      - FACE_REKON_THUMBNAIL_PATH=/tmp/test_thumbnails
      # Super-resolution configuration (Real-ESRGAN)
      - FACE_REKON_USE_SUPER_RESOLUTION=true
      - FACE_REKON_SR_THRESHOLD=200
      - FACE_REKON_SR_SCALE=4
      - FACE_REKON_ADAPTIVE_INTERPOLATION=true
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    command: python run_tests.py integration
