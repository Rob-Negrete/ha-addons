name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test Face Rekon
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10.18]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install test dependencies
        run: |
          cd face-rekon
          pip install -r requirements-test.txt

      - name: Run unit tests with coverage
        run: |
          cd face-rekon
          python -m pytest tests/unit/test_app.py tests/unit/test_simple.py -c pytest-unit.ini -v --cov=scripts --cov-report=xml --cov-report=term-missing

      - name: Build test container
        run: |
          cd face-rekon
          docker build -f Dockerfile.test -t face-rekon-test .

      - name: Run integration tests in container
        run: |
          cd face-rekon
          docker compose -f docker-compose.test.yml run --rm integration-tests

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: ./face-rekon
          files: ./coverage.xml
          fail_ci_if_error: false

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test Docker build
        uses: docker/build-push-action@v5
        with:
          context: ./face-rekon
          file: ./face-rekon/Dockerfile
          platforms: linux/amd64
          push: false
          tags: face-rekon:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.18

      - name: Install linting tools
        run: |
          pip install black==23.7.0 flake8==6.0.0 mypy==1.5.1

      - name: Check code formatting with Black
        run: |
          black --check --diff face-rekon/scripts face-rekon/tests

      - name: Lint with flake8
        run: |
          flake8 face-rekon/scripts face-rekon/tests --max-line-length=88 --extend-ignore=E203,W503

      - name: Type check with mypy
        continue-on-error: true # Don't fail CI for type issues initially
        run: |
          mypy face-rekon/scripts --ignore-missing-imports
